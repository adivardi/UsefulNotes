1. Bind USB in Linux:
  Find the device that needs to be used in /dev/XXX. If USB, it would probably be ttyUSBX. If serial, ttyX. The easiest way to recognize the device is to unplug and the plug it and see which new one shows up.

  check device infomation: udevadm info -a -p $(udevadm info -q path -n <devpath>)
  inserting a <devpath> such as /dev/ttyUSB0

  find information in the list: kernels, idVendor, idProduct. Choose a simlink name

  edit 99-name.rules in /etc/udev/rules.d like this and change the information.
  Example:
  SUBSYSTEMS=="usb",KERNELS=="1-8", ACTION=="add", ATTRS{idVendor}=="067b", ATTRS{idProduct}=="2303", MODE="666", SYMLINK+="usb_mobile_base", GROUP:="dialout"

  get already bounded usb link: ls -l /dev/usb* ( usb* is linked to ttyUSB*,get info of which ttyUSB* it is )

2.  pkg-config --modversion "package"   --------- get package version
               --libs       "package"   --------- get package linking libs
               --cflags     "package"   --------- get package include flags

3.  grep -rnw "directory" -e "pattern"  --------- search code in directory
    -r :is recurcive
    -n :show line number
    -w :whole word
    -l :search certain file to match

4. Run command for many files from terminal or bash:
    for i in $(ls); do ___cmd___ $i; done

    e.g.
        for i in $(ls); do echo $i; done
        for i in $(ls); do ./main $i; done

lsblk: Shows the connected disks with their names and mountpoints (= folders). If MOUNTPOINT is empty, the device is either partitioned or not mounted.
sudo blkid /dev/sdX: shows the details about the devices sdX
umount MOUNTPOINT: Unmount the device.
sudo udisksctl power-off --block-device /dev/sdX: Turn off the device sdX
